<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>info.pinlab.snd.gui.swing</groupId>
	<artifactId>WavPanel</artifactId>
	<version>0.1</version>
	<name>Schnitt</name>
	<description>Vad + Java swing visualization</description>

	<repositories>
		<repository>
			<id>dev.davidsoergel.com releases</id>
			<url>http://dev.davidsoergel.com/nexus/content/repositories/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>dev.davidsoergel.com snapshots</id>
			<url>http://dev.davidsoergel.com/nexus/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>



	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>







			<!-- Maven Shade Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.2</version>
				<executions>
					<!-- Run shade goal on package phase -->
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>

							<transformers>
								<!-- add Main-Class to manifest file -->
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>info.pinlab.schnitt.Main</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>exec-maven-plugin</artifactId> 
				<executions> <execution> <id>package-jar</id> <phase>package</phase> <goals> 
				<goal>exec</goal> </goals> <configuration> <executable> ${env.JAVA_HOME}/bin/javapackager 
				</executable> <arguments> <argument>-createjar</argument> <argument>-appclass</argument> 
				<argument>info.pinlab.schnitt.Main</argument> <argument>-srcdir</argument> 
				<argument>./target/classes</argument> <argument>-outdir</argument> <argument>./target</argument> 
				<argument>-outfile</argument> <argument> ${project.artifactId}-app </argument> 
				<argument>-v</argument> </arguments> </configuration> </execution> </executions> 
				</plugin> -->

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jar-plugin</artifactId> 
				<version>2.6</version> <configuration> <archive> <manifest> <addClasspath>true</addClasspath> 
				<classpathPrefix>jar/</classpathPrefix> <mainClass>info.pinlab.schnitt.Main</mainClass> 
				</manifest> </archive> </configuration> </plugin> Build an executable JAR -->


			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
							<goal>sources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/lib/jar</outputDirectory>
							<includeScope>test</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/lib/</outputDirectory>
							<resources>
								<resource>
									<directory>target/</directory>
									<includes>
										<include>${project.artifactId}-${project.version}.jar</include>
									</includes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>info.pinlab.pinsound</groupId>
			<artifactId>openal</artifactId>
			<version>0.0.4</version>
		</dependency>
		<dependency>
			<groupId>net.java.dev.glazedlists</groupId>
			<artifactId>glazedlists_java15</artifactId>
			<version>1.9.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.2</version>
		</dependency>

		<dependency>
			<groupId>edu.berkeley.compbio</groupId>
			<artifactId>jlibsvm</artifactId>
			<version>0.911</version>
		</dependency>

	</dependencies>
</project>